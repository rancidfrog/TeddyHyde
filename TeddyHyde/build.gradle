//def env = System.getenv()
//Print all the environment variables.
//env.each{
//println it
//}


buildscript {
    repositories {
        mavenCentral()
        maven {
            url 'https://oss.sonatype.org/content/repositories/snapshots/'
        }
    }
    dependencies {
            classpath 'com.android.tools.build:gradle:0.9.+'
    }
}

apply plugin: 'android'

dependencies {
//    compile 'com.android.support:support-v4:19.0.1'
    compile 'com.android.support:appcompat-v7:+'
    compile fileTree( dir: 'libs', include: '*.jar' )
}

repositories {
    mavenCentral()
}

android {
    compileSdkVersion 19
    buildToolsVersion "19.0.3"

    dependencies {

        compile 'org.eclipse.mylyn.github:org.eclipse.egit.github.core:2.1.5'
        compile( 'commons-codec:commons-codec:1.9' )
        compile 'com.madgag:markdownj-core:0.4.1'
        compile( 'com.wu-man:android-oauth-client:0.0.2' ) {
            exclude module: 'support-v4'
        }
        compile 'com.google.http-client:google-http-client-jackson2:1.17.0-rc'
        compile 'org.apache.commons:commons-lang3:3.2'
        compile 'com.google.code.gson:gson:2.2.4'
        compile 'com.squareup.retrofit:retrofit:1.3.0'
        compile 'com.squareup.picasso:picasso:2.1.1'

    }

     packagingOptions {
      exclude 'META-INF/LICENSE.txt'
exclude 'META-INF/NOTICE.txt'
        }


    signingConfigs {

        release {
            storeFile file("$System.env.STORE_FILE")
            storePassword "$System.env.INQRY_PASSWORD"
            keyAlias "inqry"
            keyPassword "$System.env.INQRY_PASSWORD"
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            buildConfigField "String", "GITHUB_CLIENT_ID", "\"$System.env.GITHUB_CLIENT_ID\""
            buildConfigField "String", "GITHUB_CLIENT_SECRET", "\"$System.env.GITHUB_CLIENT_SECRET\""
        }
    }

      lintOptions {
          abortOnError false
      }

}

